# Here, Gatling conf file is used for adjusting the reporting mechanism.
# Gatling tests result database  has intergation with the Graphite/Graphite-like API.
# Graphite data feed mechanism is listening port where Gatling data is reported.
# Thus, Graphite can be metrics API for keeping, analyzing Gatling applicaiton performance results.
# It can store, preserve, apply different data mining functions to Gatling test result in order to analyze the Gatling output.
# Also, Grafana can be used as the tool for analyzing Gatling tests results. You'll need to use Graphite database as data source in Grafana view.
gatling {
  data {
    writers = "console,file,graphite" # The list of DataWriters to which Gatling write simulation data (currently supported : console, file, graphite, jdbc)
    reader = file             # The DataReader used by the charting engine for reading simulation results
    console {
      light = false           # When set to true, displays a light version without detailed request stats
    }
    file {
      bufferSize = 8192       # FileDataWriter's internal data buffer size, in bytes
    }
    leak {
      noActivityTimeout = 30  # Period, in seconds, for which Gatling may have no activity before considering a leak may be happening
    }
    graphite {
      light = false              # only send the all* stats
      host = "localhost" # The host where the Carbon server is located
      port = 2003
      bucketWidth = 100 # The port to which the Carbon server listens to (2003 is default for plaintext, 2004 is default for pickle)
      protocol = "tcp"           # The protocol used to send data to Carbon (currently supported : "tcp", "udp")
      rootPathPrefix = "gatling" # The common prefix of all metrics sent to Graphite
      bufferSize = 8192          # GraphiteDataWriter's internal data buffer size, in bytes
      writeInterval = 1          # GraphiteDataWriter's write interval, in seconds
    }
  }
}